<% layout("../layouts/profileboilerPlate") %>

    <style>
        /* Main Content Styling */
        .content {
            min-height: 100vh;
            padding: 2rem 0;
        }

        .container-extended {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        /* Page Title */
        h2 {
            color: var(--text-light);
            font-size: 2.5rem;
            font-weight: 600;
            letter-spacing: 1px;
            margin-bottom: 2rem;
            border-bottom: 2px solid var(--accent-color);
            padding-bottom: 0.5rem;
        }

        /* Cart Items Container */
        .cart-items {
            background: var(--primary-color);
            border-radius: 12px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
            margin-bottom: 2rem;
        }

        /* Individual Cart Item */
        .cart-item {
            display: grid;
            grid-template-columns: 120px 2fr 1fr 1fr 1fr 1fr auto;
            gap: 1.5rem;
            align-items: center;
            padding: 2rem;
            border-bottom: 1px solid var(--border-color);
            transition: all 0.3s ease;
        }

        .cart-item:hover {
            background: var(--primary-light);
        }

        /* Product Image */
        .product-img img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }

        /* Product Details */
        .product-name p {
            color: var(--text-light) !important;
            font-size: 1.1rem;
            font-weight: 600;
            margin: 0;
        }

        .product-color p,
        .product-size p {
            color: var(--text-muted);
            font-size: 0.9rem;
            margin: 0;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* Quantity Input */
        .product-quantity input {
            width: 80px;
            padding: 0.5rem;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            text-align: center;
            font-size: 1rem;
            margin-right: 0.5rem;
            background: var(--primary-light);
            color: var(--text-light);
        }

        .update-btn {
            background: var(--success-color);
            color: var(--primary-color);
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            transition: filter 0.3s ease;
        }

        .update-btn:hover {
            filter: brightness(90%);
        }

        /* Price Display */
        .product-price p {
            color: var(--text-light);
            font-size: 1.2rem;
            font-weight: 600;
            margin: 0;
        }

        /* Delete Button */
        .btn-danger {
            background: transparent;
            color: var(--error-color);
            border: 1px solid var(--error-color);
            padding: 0.5rem;
            border-radius: 6px;
            transition: all 0.3s ease;
        }

        .btn-danger:hover {
            background: var(--error-color);
            color: var(--primary-color);
        }

        /* Cart Summary */
        .cart-summary {
            position: sticky;
            top: 2rem;
        }

        .summary-card {
            background: var(--primary-color);
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
            border: 1px solid var(--border-color);
        }

        .summary-card h5 {
            color: var(--text-light);
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
            border-bottom: 2px solid var(--accent-color);
            padding-bottom: 0.5rem;
        }

        .summary-card p {
            color: var(--text-light);
            font-size: 1.1rem;
            margin-bottom: 1.5rem;
        }

        .checkout-btn {
            display: block;
            background: var(--success-color);
            color: var(--primary-color);
            text-decoration: none;
            padding: 1rem 2rem;
            border-radius: 8px;
            text-align: center;
            font-weight: 600;
            transition: filter 0.3s ease;
        }

        .checkout-btn:hover {
            filter: brightness(90%);
            transform: translateY(-2px);
        }

        /* Empty Cart Alert */
        .alert {
            background: var(--primary-light);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1.5rem;
            font-size: 1.1rem;
            color: var(--text-light);
        }

        .alert-link {
            color: var(--success-color);
            text-decoration: none;
            font-weight: 600;
        }

        .alert-link:hover {
            color: var(--success-color);
            text-decoration: underline;
        }

        /* Delete Modal */
        .modal-content {
            background: var(--primary-color);
            border-radius: 12px;
            border: 1px solid var(--border-color);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        }

        .modal-header {
            border-bottom: 2px solid var(--border-color);
            padding: 1.5rem;
        }

        .modal-title {
            color: var(--text-light) !important;
            font-weight: 600;
        }

        .modal-body {
            color: var(--text-light);
        }

        .modal-footer {
            border-top: 1px solid var(--border-color);
            padding: 1.5rem;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .cart-item {
                grid-template-columns: 100px 2fr 1fr 1fr auto;
                gap: 1rem;
            }

            .product-color,
            .product-size {
                display: none;
            }
        }

        @media (max-width: 768px) {
            .cart-item {
                grid-template-columns: 80px 1fr auto;
                gap: 1rem;
            }

            .product-quantity,
            .product-price {
                grid-column: 2;
            }

            .btn-danger {
                grid-column: 3;
                grid-row: span 2;
            }
        }
    </style>

    <!-- Main Content Area -->
    <div class="content" id="mainContent">
        <div class="container-extended mt-5">
            <h2 class="mb-4">Your Shopping Cart</h2>
            <div id="cart-message" class="mt-3"></div>
            <% if(cart.items.length===0) { %>
                <div class="alert">
                    Your cart is empty. <a href="/" class="alert-link">Go shopping!</a>
                </div>
                <% } else { %>
                    <div class="cart-items">
                        <% cart.items.forEach(item=> { %>
                            <div class="cart-item">
                                <!-- Product Image -->
                                <div class="product-img">
                                    <a href="/productDetails?id=<%= item.productId._id %>">
                                        <img src="/uploads/products/<%= item.productId.productImage[0] %>"
                                            alt="<%= item.productId.productName %>">
                                    </a>
                                </div>

                                <!-- Product Details -->
                                <div class="product-name">
                                    <p>
                                        <%= item.productId.productName %>
                                    </p>
                                </div>

                                <!-- Product Options -->
                                <div class="product-color">
                                    <p>
                                        <%= item.color %>
                                    </p>
                                </div>
                                <div class="product-size">
                                    <p>
                                        <%= item.size %>
                                    </p>
                                </div>

                                <!-- Quantity Controls -->
                                <div class="product-quantity">
                                    <form action="/profile/cart/update?itemId=<%= item._id %>" method="POST">
                                        <select name="quantity" class="form-select"
                                            onfocus="this.dataset.previousValue = this.value"
                                            onchange="updateQuantity(this)">
                                            <% for (let i=1; i <=10; i++) { %>
                                                <option value="<%= i %>" <% if (item.quantity===i) { %>selected<% } %>>
                                                        <%= i %>
                                                </option>
                                                <% } %>
                                        </select>
                                    </form>
                                </div>
                                <!-- Pricing -->
                                <div class="product-price">
                                    <p id="itemPrice">â‚¹<%= item.totalPrice.toFixed(2) %>
                                    </p>
                                </div>

                                <!-- Delete Button -->
                                <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal"
                                    data-bs-target="#deleteModal" onclick="deleteCartItem('<%= item._id %>')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                            <% }) %>
                    </div>

                    <!-- Cart Summary -->
                    <div class="cart-summary">
                        <div class="summary-card">
                            <h5>Cart Summary</h5>
                            <p id="totalAmount"><strong>Total Amount:</strong> â‚¹<%= cart.totalAmount.toFixed(2) %>
                            </p>
                            <a href="/checkout" class="checkout-btn">Proceed to Checkout</a>
                        </div>
                    </div>
                    <% } %>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this item from your cart?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <a id="confirmDeleteBtn" href="#" class="btn btn-danger">Delete</a>
                </div>
            </div>
        </div>
    </div>

    <script>
        function deleteCartItem(itemId) {
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            confirmDeleteBtn.href = `/profile/cart/delete?itemId=${itemId}`;
        }
        async function updateQuantity(selectElement) {
            const previousQuantity = selectElement.dataset.previousValue || selectElement.value;
            const selectedQuantity = selectElement.value;
            const form = selectElement.closest('form');
            const itemPrice = document.getElementById("itemPrice")
            const totalPrice = document.getElementById("totalAmount")
            const itemVal = itemPrice.value
            const totalVal = totalPrice.value
            const url = form.action;

            try {
                const response = await fetch(url, {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ quantity: selectedQuantity })
                });

                const result = await response.json();
                console.log(result);
                const messageEl = document.getElementById('cart-message');
                const message = result.message || 'An unexpected error occurred.';
                const itemAmount = `â‚¹${result.itemPrice.toFixed(2)}`
                const totalAmount = `â‚¹${result.totalAmount.toFixed(2)}`

                if (result.success) {
                    messageEl.innerHTML = `
                <div class="alert alert-success" role="alert">
                    ${message}
                </div>`;
                    selectElement.dataset.previousValue = selectedQuantity; 
                    itemPrice.textContent = itemAmount
                    totalPrice.textContent = totalAmount
                } else {
                    messageEl.innerHTML = `
                <div class="alert alert-danger" role="alert">
                    ${message}
                </div>`;
                    selectElement.value = previousQuantity; 
                    itemPrice.textContent = itemAmount
                    totalPrice.textContent = totalAmount
                }

                setTimeout(() => {
                    messageEl.innerHTML = '';
                }, 2000);
            } catch (error) {
                console.log("Error while updating the cart item", error.message);
                selectElement.value = previousQuantity; 
            }
        }

    </script>