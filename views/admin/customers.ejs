<% layout("../layouts/adminboilerplate") %>
<style>


    .container {
        background: var(--primary-light);
        padding: 2rem;
        border-radius: 12px;
        margin-top: 20px;
    }

    h2 {
        color: var(--text-light);
        font-weight: 600;
        margin-bottom: 1.5rem;
    }

    .form-control {
        background: var(--primary-color);
        border: 1px solid var(--border-color);
        color: var(--text-light);
    }

    .form-control::placeholder {
        color: var(--text-muted);
    }

    .btn-primary {
        background: var(--success-color);
        border: none;
        color: var(--primary-color);
        transition: filter 0.3s ease;
    }

    .btn-primary:hover {
        filter: brightness(90%);
    }

    .table {
        background: var(--primary-color);
        border: 1px solid var(--border-color);
        border-radius: 8px;
        overflow: hidden;
    }

    .table th {
        background: var(--primary-light);
        color: var(--text-light);
        font-weight: 600;
    }

    .table td {
        color: var(--text-light);
    }

    .table-hover tbody tr:hover {
        background: var(--primary-light);
    }

    .badge {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 20px;
    }

    .badge.bg-danger {
        background: var(--error-color) !important;
        color: var(--primary-color) !important;
    }

    .badge.bg-success {
        background: var(--success-color) !important;
        color: var(--primary-color) !important;
    }

    .btn-danger {
        background: var(--error-color);
        border: none;
        color: var(--primary-color);
        transition: filter 0.3s ease;
    }

    .btn-danger:hover {
        filter: brightness(90%);
    }

    .btn-success {
        background: var(--success-color);
        border: none;
        color: var(--primary-color);
        transition: filter 0.3s ease;
    }

    .btn-success:hover {
        filter: brightness(90%);
    }

    .pagination .page-link {
        background: var(--primary-color);
        border: 1px solid var(--border-color);
        color: var(--text-light);
    }

    .pagination .page-item.active .page-link {
        background: var(--success-color);
        border-color: var(--success-color);
        color: var(--primary-color);
    }

    .pagination .page-link:hover {
        background: var(--primary-light);
    }
</style>

<main class="main-content">
    <div class="container mt-4">
        <div class="row">
            <div class="col-12">
                <h2 class="text-center">Customers</h2>
            </div>
        </div>

        <!-- Search Form -->
        <div class="row mt-3">
            <div class="col-12">
                <form action="/admin/users/" method="get">
                    <div class="input-group position-relative">
                        <input type="text" name="search" class="form-control" placeholder="Search customers..."
                            value="<%= search || '' %>" id="searchInput" />
                        <a href="/admin/users/" class="text-decoration-none" style="cursor: pointer; color: var(--text-muted);">
                            <span class="reset-icon">&#10005;</span>
                        </a>
                        <button type="submit" class="btn btn-primary ms-2">Search</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Customers Table -->
        <div class="row mt-4">
            <div class="col-12">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone No</th>
                            <th>Status</th>
                            <th>Block/Unblock</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (userData.length === 0) { %>
                            <tr>
                                <td colspan="5" class="text-center">No customers found</td>
                            </tr>
                        <% } else { %>
                            <% for (let i = 0; i < userData.length; i++) { %>
                                <tr>
                                    <td><%= userData[i].name %></td>
                                    <td><%= userData[i].email %></td>
                                    <td><%= userData[i].phone %></td>
                                    <td>
                                        <% if (userData[i].isBlocked) { %>
                                            <span class="badge bg-danger">Blocked</span>
                                        <% } else { %>
                                            <span class="badge bg-success">Active</span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <button data-user-id="<%= userData[i]._id %>"
                                                data-search="<%= search || '' %>"
                                                data-page="<%= page || '' %>"
                                                onclick="toggleUserStatus(this)"
                                                class="btn <%= userData[i].isBlocked ? 'btn-danger' : 'btn-success' %> btn-sm">
                                            <%= userData[i].isBlocked ? 'Unblock' : 'Block' %>
                                        </button>
                                    </td>
                                </tr>
                            <% } %>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <div class="row mt-3">
            <div class="col-12 d-flex justify-content-center">
                <nav>
                    <ul class="pagination">
                        <% if (page > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="/admin/users/?search=<%= search || '' %>&page=<%= page - 1 %>" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        <% } %>

                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= page === i ? 'active' : '' %>">
                                <a class="page-link" href="/admin/users/?search=<%= search || '' %>&page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>

                        <% if (page < totalPages) { %>
                            <li class="page-item">
                                <a class="page-link" href="/admin/users/?search=<%= search || '' %>&page=<%= page + 1 %>" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</main>




<script>
   async function toggleUserStatus(button) {
    const userId = button.getAttribute('data-user-id');
    const search = button.getAttribute('data-search');
    const page = button.getAttribute('data-page');

    try {
        const response = await fetch(`/admin/users/toggle?id=${userId}&search=${search}&page=${page}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        const data = await response.json();

        if (data.success) {
            // Toggle the button text and class
            if (data.isBlocked) {
                button.textContent = 'Unblock';
                button.classList.remove('btn-success');
                button.classList.add('btn-danger');
            } else {
                button.textContent = 'Block';
                button.classList.remove('btn-danger');
                button.classList.add('btn-success');
            }

            // Update the status badge
            const row = button.closest('tr');
            const statusBadge = row.querySelector('.badge');
            if (statusBadge) {
                if (data.isBlocked) {
                    statusBadge.textContent = 'Blocked';
                    statusBadge.classList.remove('bg-success');
                    statusBadge.classList.add('bg-danger');
                } else {
                    statusBadge.textContent = 'Active';
                    statusBadge.classList.remove('bg-danger');
                    statusBadge.classList.add('bg-success');
                }
            }
        } else {
            alert('Failed to toggle user status');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while toggling user status');
    }
}
</script>