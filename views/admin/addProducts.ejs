<%- layout("../layouts/adminboilerplate") %>
<title>
    <%= title %>
</title>

<section class="container mt-5">
    <h2 class="text-center">Add New Product</h2>
    <form method="post" action="/admin/products/add" enctype="multipart/form-data" id="productForm" novalidate>
        <!-- Product Name -->
        <div class="mb-3">
            <label for="product_name" class="form-label">Product Name</label>
            <input type="text" name="productName" class="form-control" id="product_name" placeholder="Enter product name" required>
            <div class="invalid-feedback">Product name is required.</div>
        </div>

        <!-- Brand -->
        <div class="mb-3">
            <label class="form-label">Brand</label>
            <select class="form-select" name="brand" required>
                <% for (let i = 0; i < brand.length; i++) { %>
                    <option value="<%= brand[i].brandName %>"><%= brand[i].brandName %></option>
                <% } %>
            </select>
            <div class="invalid-feedback">Brand is required.</div>
        </div>

        <!-- Description -->
        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea name="description" id="description" class="form-control" rows="4" placeholder="Enter description" required></textarea>
            <div class="invalid-feedback">Description is required.</div>
        </div>
        <!--Product offer-->
        <div class="mb-3">
            <label for="productOffer" class="form-label">Product Offer</label>
            <input type="number" name="productOffer" class="form-control" id="productOffer" placeholder="Enter the offer " required>
            <div class="invalid-feedback">product offer is required.</div>
        </div>

        <!-- Category -->
        <div class="mb-3">
            <label class="form-label">Category</label>
            <select class="form-select" name="category" required>
                <% for (let i = 0; i < category.length; i++) { %>
                    <option value="<%= category[i].name %>"><%= category[i].name %></option>
                <% } %>
            </select>
            <div class="invalid-feedback">Category is required.</div>
        </div>

        <!-- Variants Section -->
        <div id="variants-container">
            <div class="variant-section" id="variant0">
                <h5>Variant 1</h5>
                <div class="mb-3">
                    <label class="form-label">Color</label>
                    <input type="text" name="variants[0][color]" class="form-control" placeholder="Color" required>
                    <div class="invalid-feedback">Color is required for this variant.</div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Size</label>
                    <input type="text" name="variants[0][size]" class="form-control" placeholder="Size" required>
                    <div class="invalid-feedback">Size is required for this variant.</div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Price</label>
                    <input type="number" name="variants[0][price]" class="form-control" placeholder="Price" required>
                    <div class="invalid-feedback">Price is required for this variant.</div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Sale Price</label>
                    <input type="number" name="variants[0][salePrice]" class="form-control" placeholder="Sale Price" required>
                    <div class="invalid-feedback">Sale Price is required for this variant.</div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Quantity</label>
                    <input type="number" name="variants[0][quantity]" class="form-control" placeholder="Quantity" required>
                    <div class="invalid-feedback">Quantity is required for this variant.</div>
                </div>
            </div>
        </div>

        <!-- Button to Add More Variants -->
        <button type="button" class="btn btn-secondary" onclick="addVariant()">Add More Variants</button>

        <!-- Image Upload -->
        <div>
            <label class="form-label">Upload Images (Max: 3)</label>
            <div id="imageUploads">
                <% for (let i = 1; i <= 3; i++) { %>
                <div class="image-upload-container">
                    <input class="form-control" type="file" name="images" id="input<%= i %>" accept="image/png, image/jpeg, image/webp" onchange="initializeCropper(<%= i %>)" required>
                    <div class="image-crop-container" id="crop-container<%= i %>">
                        <img id="crop-image<%= i %>" class="img-fluid">
                        <button type="button" class="btn btn-primary mt-2" onclick="saveCrop(<%= i %>)">Save</button>
                    </div>
                    <div class="invalid-feedback">Please upload an image.</div>
                </div>
                <% } %>
            </div>
        </div>

        <!-- Submit -->
        <button type="submit" class="btn btn-success mt-4">Submit</button>
    </form>
</section>


<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="/js/cropperAndVarients.js"></script>
<script src="/js/productValidation.js"></script>


<script>
    document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("productForm");

    form.addEventListener("submit", function (event) {
        let isValid = true;

        // Helper function to show error messages
        function showError(input, message) {
            isValid = false;
            input.classList.add("is-invalid");
            input.nextElementSibling.textContent = message;
        }

        function clearError(input) {
            input.classList.remove("is-invalid");
            input.nextElementSibling.textContent = "";
        }

        // Validate Product Name
        const productName = document.getElementById("product_name");
        if (productName.value.trim() === "") {
            showError(productName, "Product name cannot be empty.");
        } else if (productName.value.trim().length < 3) {
            showError(productName, "Product name must be at least 3 characters.");
        } else {
            clearError(productName);
        }

        // Validate Product Offer
        const productOffer = document.getElementById("productOffer");
        if (productOffer.value.trim() === "") {
            showError(productOffer, "Please enter a product offer.");
        } else if (isNaN(productOffer.value) || productOffer.value < 0) {
            showError(productOffer, "Offer must be a valid positive number.");
        } else {
            clearError(productOffer);
        }

        // Validate Variants
        const variantInputs = document.querySelectorAll(".variant-input");
        variantInputs.forEach((input) => {
            if (input.value.trim() === "") {
                const fieldName = input.getAttribute("placeholder") || "This field";
                showError(input, `${fieldName} cannot be empty.`);
            } else {
                clearError(input);
            }
        });


        if (!isValid) {
            event.preventDefault();
            event.stopPropagation();
        }

        form.classList.add("was-validated");
    });
});

</script>