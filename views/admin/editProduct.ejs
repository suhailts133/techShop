<%- layout("../layouts/adminboilerplate") %>
<title>
    <%= title %>
</title>

<section class="container mt-5">
    <h2 class="text-center">Edit Product - <%= product.productName %></h2>
    <form method="post" action="/admin/products/edit?id=<%= product._id %>" enctype="multipart/form-data" id="productForm" novalidate>
        
        <!-- Product Name -->
        <div class="mb-3">
            <label for="product_name" class="form-label">Product Name</label>
            <input type="text" name="productName" class="form-control" id="product_name" value="<%= product.productName %>" required>
            <div class="invalid-feedback">Product name is required.</div>
        </div>

        <!-- Brand -->
        <div class="mb-3">
            <label class="form-label">Brand</label>
            <select class="form-select" name="brand" required>
                <% brand.forEach(brandItem => { %>
                    <option value="<%= brandItem.brandName %>" <%= product.brand === brandItem.brandName ? 'selected' : '' %>><%= brandItem.brandName %></option>
                <% }) %>
            </select>
            <div class="invalid-feedback">Brand is required.</div>
        </div>

        <!-- Description -->
        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea name="description" id="description" class="form-control" rows="4" required><%= product.description %></textarea>
            <div class="invalid-feedback">Description is required.</div>
        </div>
        <!--Product offer -->
        <div class="mb-3">
            <label for="productOffer" class="form-label">Product Offer in %</label>
            <input type="number" name="productOffer" class="form-control" id="productOffer" value="<%= product.productOffer %>" required>
            <div class="invalid-feedback">product offer is required.</div>
        </div>
        <!-- Category -->
        <div class="mb-3">
            <label class="form-label">Category</label>
            <select class="form-select" name="category" required>
                <% category.forEach(cat => { %>
                    <option value="<%= cat.name %>" <%= product.category === cat.name ? 'selected' : '' %>><%= cat.name %></option>
                <% }) %>
            </select>
            <div class="invalid-feedback">Category is required.</div>
        </div>

        <!-- Variants Section -->
        <div id="variants-container">
            <% product.variants.forEach((variant, index) => { %>
                <div class="variant-section" id="variant<%= index %>">
                    <h5>Variant <%= index + 1 %></h5>
                    <div class="mb-3">
                        <label class="form-label">Color</label>
                        <input type="text" name="variants[<%= index %>][color]" class="form-control" value="<%= variant.color %>" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Size</label>
                        <input type="text" name="variants[<%= index %>][size]" class="form-control" value="<%= variant.size %>" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Price</label>
                        <input type="number" name="variants[<%= index %>][price]" class="form-control" value="<%= variant.price %>" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Sale Price</label>
                        <input type="number" name="variants[<%= index %>][salePrice]" class="form-control" value="<%= variant.salePrice %>" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Quantity</label>
                        <input type="number" name="variants[<%= index %>][quantity]" class="form-control" value="<%= variant.quantity %>" required>
                    </div>
                    <button type="button" class="btn btn-danger" onclick="removeVariant(<%= index %>)">Delete Variant</button>
                    <hr>
                </div>
            <% }) %>
        </div>

        <!-- Button to Add More Variants -->
        <button type="button" class="btn btn-secondary" onclick="addVariant()">Add More Variants</button>

        <!-- Image Upload -->
        <div>
            <label class="form-label">Upload Images</label>
            <div id="imageUploads">
                <% for (let i = 1; i <= 3; i++) { %>
                    <div class="image-upload-container">
                        <% if (product.productImage[i - 1]) { %>
                            <div class="current-image">
                                <img src="/uploads/products/<%= product.productImage[i - 1] %>" alt="Current image" class="img-fluid" style="max-width: 200px; margin-bottom: 10px;">
                                
                            </div>
                        <% } %>
                        <input class="form-control" type="file" name="images" id="input<%= i %>" accept="image/png, image/jpeg, image/webp" onchange="initializeCropper(<%= i %>)" value="<%= product.productImage[i - 1] %>">
                        <div class="invalid-feedback">Please upload an image.</div>
                        <div class="image-crop-container" id="crop-container<%= i %>">
                            <img id="crop-image<%= i %>" class="img-fluid">
                            <button type="button" class="btn btn-primary mt-2" onclick="saveCrop(<%= i %>)">Save</button>
                            
                        </div>
                        
                    </div>
                <% } %>
            </div>
        </div>

        <!-- Submit -->
        <button type="submit" class="btn btn-success mt-4">Update Product</button>
    </form>
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="/js/editproduct.js"></script>
<script src="/js/productValidation.js"></script>

<script>
(function () {
    'use strict';

    const forms = document.querySelectorAll('.validated-form');

    Array.from(forms).forEach(function (form) {
        form.addEventListener('submit', function (event) {
            let isValid = true;

            // Get all variant sections
            const variantSections = form.querySelectorAll('.variant-section');

            variantSections.forEach((variant, index) => {
                const priceInput = variant.querySelector(`[name^="variants["][name$="][price]"]`);
                const salePriceInput = variant.querySelector(`[name^="variants["][name$="][salePrice]"]`);
                const priceFeedback = priceInput.nextElementSibling;
                const salePriceFeedback = salePriceInput.nextElementSibling;

                const priceValue = parseFloat(priceInput.value);
                const salePriceValue = parseFloat(salePriceInput.value);

                if (!isNaN(priceValue) && !isNaN(salePriceValue) && salePriceValue >= priceValue) {
                    isValid = false;
                    salePriceInput.setCustomValidity('Sale price must be lower than the original price.');
                    salePriceFeedback.textContent = 'Sale price must be lower than the original price.';
                } else {
                    salePriceInput.setCustomValidity('');
                    salePriceFeedback.textContent = '';
                }
            });

            // Validate Image (type and size)
            const imageInput = form.querySelector('#image');
            const imageFeedback = imageInput ? imageInput.nextElementSibling : null;

            if (imageInput && imageInput.files && imageInput.files[0]) {
                const file = imageInput.files[0];
                const validImageTypes = ['image/jpeg', 'image/png', 'image/webp'];
                const maxSize = 5 * 1024 * 1024;

                if (!validImageTypes.includes(file.type)) {
                    isValid = false;
                    imageInput.setCustomValidity('Please upload only JPG, PNG, or WebP images.');
                    if (imageFeedback) imageFeedback.textContent = 'Please upload only JPG, PNG, or WebP images.';
                } else if (file.size > maxSize) {
                    isValid = false;
                    imageInput.setCustomValidity('Image size should be less than 5MB.');
                    if (imageFeedback) imageFeedback.textContent = 'Image size should be less than 5MB.';
                } else {
                    imageInput.setCustomValidity('');
                    if (imageFeedback) imageFeedback.textContent = '';
                }
            }

            // If any field is invalid, prevent form submission
            if (!form.checkValidity() || !isValid) {
                event.preventDefault();
                event.stopPropagation();
            }

            form.classList.add('was-validated');
        });
    });
})();

</script>